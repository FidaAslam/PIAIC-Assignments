Assignment No. 1

import numpy as np

x=np.array([[2,15,9,11,3]])

x

array([[ 2, 15,  9, 11,  3]])

x.shape

(1, 5)

x.dtype

dtype('int64')

x.shape

(1, 5)

x.ndim

2

x.itemsize

8

x.size

5

type(x)

numpy.ndarray

a=np.array([2,5,7,9,1])

a

array([2, 5, 7, 9, 1])

b=np.array([(5,6,7,8,9),(10,15,14,19,11)])

b

array([[ 5,  6,  7,  8,  9],
       [10, 15, 14, 19, 11]])

np.zeros((2, 3))

array([[0., 0., 0.],
       [0., 0., 0.]])

np.ones((3,3,3), dtype=np.int16 )

array([[[1, 1, 1],
        [1, 1, 1],
        [1, 1, 1]],

       [[1, 1, 1],
        [1, 1, 1],
        [1, 1, 1]],

       [[1, 1, 1],
        [1, 1, 1],
        [1, 1, 1]]], dtype=int16)

np.empty((2,3))

array([[0., 0., 0.],
       [0., 0., 0.]])

a=np.arange(5)

a

array([0, 1, 2, 3, 4])

b = np.arange(12).reshape(4,3)

b

array([[ 0,  1,  2],
       [ 3,  4,  5],
       [ 6,  7,  8],
       [ 9, 10, 11]])

c= np.arange(24).reshape(2,4,3)

c

array([[[ 0,  1,  2],
        [ 3,  4,  5],
        [ 6,  7,  8],
        [ 9, 10, 11]],

       [[12, 13, 14],
        [15, 16, 17],
        [18, 19, 20],
        [21, 22, 23]]])

print(np.arange(10000))

[   0    1    2 ... 9997 9998 9999]

print(np.arange(10000).reshape(100,100))

[[   0    1    2 ...   97   98   99]
 [ 100  101  102 ...  197  198  199]
 [ 200  201  202 ...  297  298  299]
 ...
 [9700 9701 9702 ... 9797 9798 9799]
 [9800 9801 9802 ... 9897 9898 9899]
 [9900 9901 9902 ... 9997 9998 9999]]

np.arange(5,35,5)

array([ 5, 10, 15, 20, 25, 30])

np.arange(1,3,0.5)

array([1. , 1.5, 2. , 2.5])

from numpy import pi

np.linspace(0,2,9)

array([0.  , 0.25, 0.5 , 0.75, 1.  , 1.25, 1.5 , 1.75, 2.  ])

a= np.array([10,20,30,40])

b=np.arange(4)

c=a-b

c

array([10, 19, 28, 37])

b**2

array([0, 1, 4, 9])

b-a

array([-10, -19, -28, -37])

b/2

array([0. , 0.5, 1. , 1.5])

10*np.sin(a)

array([-5.44021111,  9.12945251, -9.88031624,  7.4511316 ])

10*np.sin(b)

array([0.        , 8.41470985, 9.09297427, 1.41120008])

5*np.cos(a)

array([-4.19535765,  2.04041031,  0.77125725, -3.33469031])

a<30

array([ True,  True, False, False])

b<15

array([ True,  True,  True,  True])

c>30

array([False, False, False,  True])

a>30

array([False, False, False,  True])

A = np.array ([[1,1],[0,1]])

B = np.array ([[2,0],[3,4]])

A*B

array([[2, 0],
       [0, 4]])

A-B

array([[-1,  1],
       [-3, -3]])

A@B

array([[5, 4],
       [3, 4]])

A.dot(B)

array([[5, 4],
       [3, 4]])

rg = np.random.default_rng(1)

a = np.ones((2,3), dtype=int)

b = rg.random((2,3))

a *= 3

a

array([[3, 3, 3],
       [3, 3, 3]])

b += a

b

array([[3.51182162, 3.9504637 , 3.14415961],
       [3.94864945, 3.31183145, 3.42332645]])

c=a+b

c

array([[6.51182162, 6.9504637 , 6.14415961],
       [6.94864945, 6.31183145, 6.42332645]])

c=a*b

c

array([[10.53546487, 11.85139109,  9.43247884],
       [11.84594834,  9.93549436, 10.26997935]])

a*b

array([[10.53546487, 11.85139109,  9.43247884],
       [11.84594834,  9.93549436, 10.26997935]])

c

array([[10.53546487, 11.85139109,  9.43247884],
       [11.84594834,  9.93549436, 10.26997935]])

b-a

array([[0.51182162, 0.9504637 , 0.14415961],
       [0.94864945, 0.31183145, 0.42332645]])

â€‹

